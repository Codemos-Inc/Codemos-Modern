name: Release & Deploy

permissions:
  contents: write

on:
  push:
    branches:
      - release

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release
        uses: actions/checkout@v4.1.7
        with:
          ref: release

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version-file: ".nvmrc"

      - name: Build artifacts
        run: |
          npm ci
          npm run build
          npm install -g @vscode/vsce
          vsce package --allow-star-activation

      - name: Prepare tag
        id: prepare_tag
        run: |
          release_version=$(node -p "require('./package-lock.json').version")
          release_tag="v$release_version"
          echo "release_version=$release_version" >> "$GITHUB_OUTPUT"
          echo "release_tag=$release_tag" >> "$GITHUB_OUTPUT"

      - name: Prepare release
        id: prepare_release
        env:
          release_version: ${{ steps.prepare_tag.outputs.release_version }}
          release_tag: ${{ steps.prepare_tag.outputs.release_tag }}
        run: |
          release_version_for_regex=$(echo $release_version | sed "s/\./\\\\./g")
          release_highlight=$(grep -Po "(?<=## \[$release_version_for_regex\] - \d{4}-\d{2}-\d{2} - ).*" ./CHANGELOG.md)
          release_name=$(echo $release_tag " - " $release_highlight)
          release_body="$(grep -Pzo "(?ms)(?<=## \[$release_version_for_regex\] - \d{4}-\d{2}-\d{2} - $release_highlight\n).*?(?=(^## ))" ./CHANGELOG.md)"
          echo "$release_body" > release_body.md
          npm install -g prettier
          prettier --write release_body.md
          echo "release_name=$release_name" >> "$GITHUB_OUTPUT"
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo 'release_body<<$EOF' >> $GITHUB_OUTPUT
          echo "$(cat release_body.md)" >> $GITHUB_OUTPUT
          echo '$EOF' >> $GITHUB_OUTPUT

      - name: Create release
        uses: softprops/action-gh-release@v2.0.8
        env:
          release_tag: ${{ steps.prepare_tag.outputs.release_tag }}
          release_name: ${{ steps.prepare_release.outputs.release_name }}
          release_body: ${{ steps.prepare_release.outputs.release_body }}
        with:
          tag_name: ${{ env.release_tag }}
          name: ${{ env.release_name }}
          body: ${{ env.release_body }}
          files: |
            ./*.vsix

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release
        uses: actions/checkout@v4.1.7
        with:
          ref: release

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version-file: ".nvmrc"

      - name: Install dependencies & build
        run: |
          npm ci
          npm run build

      - name: Publish to Open VSX Registry
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          pat: ${{ secrets.OPEN_VSX_TOKEN }}

      - name: Publish to Visual Studio Marketplace
        uses: HaaLeo/publish-vscode-extension@v1.6.2
        with:
          pat: ${{ secrets.VS_MARKETPLACE_TOKEN }}
          registryUrl: https://marketplace.visualstudio.com
